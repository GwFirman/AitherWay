// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Users {
    id        String   @id @default(uuid())
    nama      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Maps {
    id           String   @id @default(uuid())
    nama         String   @unique
    rating       String
    deskripsi    String   @default("")
    alamat       String
    gambar       String
    longitude    Float
    latitude     Float
    total_ulasan Int      @default(0)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    reviews Reviews[]
}

model Reviews {
    id        String   @id @default(uuid())
    nama      String
    rating    String
    komentar  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    maps   Maps   @relation(fields: [mapsId], references: [id], onDelete: Cascade)
    mapsId String
}

model Conversations {
    id        String   @id @default(uuid())
    nama      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    messages Messages[]
}

model Messages {
    id        String   @id @default(uuid())
    name      String
    sender    Sender   @default(user)
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Conversations   Conversations @relation(fields: [conversationsId], references: [id])
    conversationsId String
}

enum Sender {
    user
    bot
}
